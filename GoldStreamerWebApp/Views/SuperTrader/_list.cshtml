@model PagedList.IPagedList<BLL.DomainClasses.Trader>
@using GoldStreamer.Helpers
@using GoldStreamerWebApp.Helpers
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css"/>

@{
    string baseUrl = CultureHelper.GetBaseURL().ToLower();
    string trClass = "clr_tr";
}

<table style="width:100%" class="data_table" id="tblUsers">
    <tr>
        <td>
            @Html.TextBox("searchtxt", "", "", new { placeholder = @Resources.General.Filter })
        </td>
   
        <td>
            <input class="btn" id="btnSearch" type="button" value=@Resources.General.Filter>

        </td>
    </tr>

    <tr>
        <td style="text-align:right;">
            @Html.ActionLink(Resources.General.STraderProfileCreate, "STraderProfile", "Trader", null, new { @class = "btn" })
        </td>
    </tr>
    @if (!Model.Any())
    {
        <tr>
            <td>
                @Html.Label("lblMSGsearch", Resources.Messages.NoData)
            </td>
        </tr>
    }
    else
    {
        <tr style="text-align:right;">
            <td>
                <div class="counter_div">
                    @Resources.General.SearchResultCount : @Model.TotalItemCount
                    </div>
</td>
        </tr>
        <tr>
            <th width="20%">
                @Resources.General.TraderName
            </th>
            <th width="20%">
                @Resources.General.LastName
            </th>
            <th width="20%">
                @Resources.General.isactive
            </th>
            <th width="20%">
                @Resources.General.Actions
            </th>
            <th width="20%">
                @Resources.General.ShowUsers
            </th>
        </tr>

        foreach (var item in Model)
        {
            <tr class="@trClass">
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Family)
                </td>
                <td>
                    <input type="checkbox" class="checkbox" checked="@item.IsActive" data-id="@item.ID" title="@Resources.General.Activate" />
                </td>
                <td>
                    @Html.ActionLink(Resources.General.STUpdate, "Edit", "Trader", new { id = item.ID }, null)
                </td>
                <td>
                    @Html.ActionLink(Resources.General.ShowUsers, "AddUsers", "SuperTrader", new { id = item.ID }, null)
                </td>
            </tr>
        
            if (trClass == "")
            {
                trClass = "clr_tr";

            }
            else
            {
                trClass = "";

            }
        }
      
        <tr>
            <td colspan="3">
                @*@if (Model.PageCount > 1)
                {

                    <span>@Resources.General.Page</span>
                    @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
                    <span> @Resources.General.From </span>
                    @Model.PageCount

                }*@
                @if (Model.PageCount > 1)
                {
                    @Html.PagedListPager(Model, page => ("javascript:gotoPage('" + page + "','" + ViewBag.searchtxt + "','" + ViewBag.pageSize + "')"))
                }
            </td>
        </tr>
        
        
    }
</table>



<script type="text/javascript">
    $(document).ready(function() {
        $('#searchtxt').keypress(function(event) {

            if (event.keyCode == 13) {

                $('#btnSearch').click();
                $('#searchtxt').focus();

                return false;
            }
        });

        $('#btnSearch').on('click', function() {
            var txt = document.getElementsByName('searchtxt')[0].value;

            $.ajax({
                url: '@(baseUrl)/' + '/SuperTrader/Search',
                type: 'Get',
                async: false,
                cache: false,
                contentType: "application/json; charset=utf-8",
                data: { searchtxt: txt },
                success: function(data) {
                    $('#divList').html(data);
                },
                error: function(xhr, textStatus) {
                    toastr.error('@Resources.Messages.OperationFailed');
                    if (xhr.status == 5)
                        window.location.reload();
                }
            });
            return false;
        });
    });

    function gotoPage(pageNumber, searchText, pageSize) {
        if (pageSize == null || pageSize == "" || pageSize == "Undefigned") {
            pageSize = 1;
        }
        $.ajax({
            url: '@(baseUrl)/' + '/SuperTrader/Search/',
            data: { searchtxt: searchText, page: pageNumber },
            contentType: "application/json; charset=utf-8",
            success: function(data) {
                $('#divList').html(data);
            },
            error: function() {
                toastr.error('@Resources.Messages.OperationFailed');
            }
        });
    }
</script>

<script>

    $(document).ready(function (e) {
        $('.checkbox').on('change', function (event) {
            var txt = document.getElementsByName('searchtxt')[0].value;
            var id = $(this).attr("data-id");
            console.log(id);
            var ckbox = $('#checkbox');
            var status;
            if ($(this).is(':checked')) {
                status = "1";
            } else {
                status = "0";
            }
            var statusId = status + "," + id;
            var url = '@(baseUrl)/' + '/SuperTrader/UnActivateSuperTrader/' + statusId;

            var r;
            if (status == "1") {
                r = confirm("@Resources.Messages.ActivateUsr");
            } else {
                r = confirm("@Resources.Messages.DeAtivateUsr");
            }
            var isSuccess = false;
            if (r == true) {
                $.ajax({
                    url: url,
                    type: "POST",
                    async: false,
                    cache: false,
                    data: { statusId: statusId },
                    success: function(data) {

                        toastr.success('@Resources.Messages.Updated');
                        $('#divList').html(data);
                    },
                    error: function (ex) {
                        toastr.error('@Resources.Messages.OperationFailed');
                        if (xhr.status == 5)
                            window.location.reload();
                    }
                });

            }
            else {
                if ($(this).is(':checked')) {
                    $(this).attr('checked', false);
                }
                else {
                    $(this).prop("checked", true);
                }
            }
      });
});

</script>
