@{
    ViewBag.Title = @Resources.General.ProfileInfo;
    string baseUrl = GoldStreamer.Helpers.CultureHelper.GetBaseURL().ToLower();
    Layout = "~/Views/Shared/_LayoutInner.cshtml";
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
@model GoldStreamerWebApp.Models.EditProfileViewModel



<div class="acc-container" style="width : 100%">
    <div class="acc-btn ">
        <h1 class=" acchead acc_icon_header ">@Resources.General.ProfileInfo</h1>
        <div class="acc_icon_img">
            <img width="25" src="/Content/Images/short_menu_icon.png" />
        </div>

    </div>
    <div class="acc-content open">
        <div class="acc-content-inner">
            <div class="contactHolder">
                @using (Html.BeginForm("EditTraderProfile", "EditProfile", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "form" }))
                {
                    <table  border="0" style="text-align: right; width: 100%;" dir="rtl">

                        <tr>
                            <td width="15%"> @Resources.General.FirstName <label style="color: red">*</label></td>
                            <td width="15%">
                                @Html.TextBoxFor(model => model.UserName, new { maxlength = 50, placeholder = @Resources.General.FirstName })
                            </td>
                            <td class="val" width="20%">@Html.ValidationMessageFor(model => model.UserName)</td>


                            <td width="15%"><label>@Resources.General.LastName</label></td>
                            <td class="val" width="15%">
                                @Html.TextBoxFor(model => model.Family, new { maxlength = 50, placeholder = @Resources.General.LastName })
                            </td>
                            <td width="20%">@Html.ValidationMessageFor(model => model.Family)</td>
                        </tr>
                        <tr>
                            <td width="15%"> @Resources.General.Gender<label style="color: red">*</label></td>
                            <td width="15%">
                                @Html.RadioButtonFor(model => model.Gender, "false", new { id = "Female", name = "Gender" })
                                @Html.Label(@Resources.General.Female)
                                @Html.RadioButtonFor(model => model.Gender, "true", new { id = "Male", name = "Gender" })
                                @Html.Label(@Resources.General.Male)
                            </td>
                            <td width="20%"></td>
                            <td width="15%"><label>@Resources.General.phone</label></td>
                            <td width="15%"> @Html.TextBoxFor(model => model.Phone, new { maxlength = 11, placeholder = @Resources.General.phone }) </td>
                            <td class="val" width="20%"> @Html.ValidationMessageFor(model => model.Phone) </td>  
                          
                        </tr>

                      @*<td width="15%">  </td>
                      <td class="val" width="20%">  </td>*@  

                        <tr>
                            <td width="15%"><label>@Resources.General.Mobile</label></td>
                            <td width="15%"> @Html.TextBoxFor(model => model.Mobile, new { name = "name", type = "text", maxlength = 15, placeholder = @Resources.General.Mobile }) </td>
                            <td class="val" width="20%"> @Html.ValidationMessageFor(model => model.Mobile) </td>


                            <td width="15%">@Resources.General.UserName</td>
                            <td><input id="lbl_Family" value=@Model.Name name="" readonly="readonly" type="text" placeholder='@Resources.General.UserName' /></td>
                        </tr>



                        <tr>
                            <td width="15%"><label>@Resources.General.Governorate</label></td>
                            <td>
                                @Html.DropDownList("Governorate", new SelectList(Model.Governorates, "ID", "Name"), @Resources.General.select)
                            </td>
                            <td width="35%"></td>

                            <td width="15%">@Resources.General.Email</td>
                            <td width="15%">@Html.TextBoxFor(model => model.Email, new { name = "name", type = "text", @readonly = "readonly", placeholder = @Resources.General.Email })  </td>
                            <td class="val" width="20%">@Html.ValidationMessageFor(model => model.Email)  </td>  
                        </tr>

                        <tr>

                            <td width="15%"><label>@Resources.General.City</label></td>
                            <td>
                                @Html.DropDownList("City", new SelectList(Model.Cities, "ID", "Name"), @Resources.General.select)
                            </td>
                            <td width="35%"></td>

                            <td width="15%">@Resources.General.ReEmail</td>
                            <td width="15%"> @Html.TextBoxFor(model => model.ReEmail, new { name = "name", type = "text", @readonly = "readonly", placeholder = @Resources.General.Email }) </td>
                            <td class="val" width="15%"> @Html.ValidationMessageFor(model => model.ReEmail) </td>  

                        </tr>

                        <tr>
                            <td width="15%"><label>@Resources.General.Region</label></td>
                            <td width="15%">
                                @Html.DropDownList("District", new SelectList(Model.Districts, "ID", "Name"), @Resources.General.select)
                            </td>
                            <td class="val" width="20%"></td>
                            
                            <td width="15%">@Resources.General.Password</td>
                            <td width="15%">@Html.PasswordFor(m => m.Password, new { name = "name", type = "password", @class = "form-control", placeholder = @Resources.General.Password, maxlength = 20 })</td>
                            <td class="val" width="20%">@Html.ValidationMessageFor(model => model.Password)  </td>  
                        </tr>

                        <tr>
                            <td width="15%">@Resources.General.OldPassword</td>
                            <td width="15%">@Html.PasswordFor(m => m.OldPassword, new { name = "name", id = "OldPassword", type = "password", @class = "form-control", placeholder = @Resources.General.OldPassword, maxlength = 20 })  </td>
                            <td class="val" width="20%">@Html.ValidationMessageFor(model => model.OldPassword)  </td>  


                            <td width="15%">@Resources.General.ConfirmPassword</td>
                            <td width="15%">@Html.PasswordFor(m => m.ConfirmPassword, new { name = "name", type = "password", @class = "form-control", placeholder = @Resources.General.ConfirmPassword, maxlength = 20 })  </td>
                            <td class="val" width="20%">@Html.ValidationMessageFor(model => model.ConfirmPassword)  </td>  

                        </tr>
                        <tr>
                            <td colspan="4" id="passwordError" style="color: red"></td>
                        </tr>

                    </table>
                    
                        
                    <table style="width:100%;height:40px;">
                        <tr>
                            <td><hr style="width: 500px;" />
                                <br />
                                <br /></td>
                          
                        </tr>
                        <tr>

                            <td align="right" colspan="4">
                                @Html.CheckBoxFor(model => model.IsPublicProfile, new { @checked = "checked" })
                                @Html.Label(@Resources.General.AllowGeneralProfile)
                            </td>
                        </tr>
                        <tr>
                            <td align="right" colspan="4">
                                @Html.CheckBoxFor(model => model.IsRegistered, new { @checked = "checked" })
                                @Html.Label(@Resources.General.RegisterInNews)
                            </td>
                        </tr>
                        <tr>
                            <td colspan="4" align="center">
                                <input class="btn center-block" name="btn_Update" id="btn_Update" type="button" value="@Resources.General.Update" />
                            </td>
                        </tr>
                    </table>
                }
            </div>
                
        </div>
    </div>
</div>

<script>

    $(function () {
        $("#Governorate").change(function () {
            var selectedItem = $(this).val();
            var ddlCity = $("#City");
            ddlCity.html('');
            $("#District").html('');
            if (selectedItem == "")
                return false;
            $.ajax({
                cache: false,
                type: "GET",
                url: '@(baseUrl)/Account/GetCity/',
                data: { "govId": selectedItem },
                success: function (data) {

                    $.each(data.city, function (id, option) {

                        ddlCity.append($('<option></option>').val(option.ID).html(option.Name));
                    });

                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve states.');
                }
            });
        });

        $("#City").change(function () {
            var selectedItem = $(this).val();
            var ddlDistrict = $("#District");
            var statesProgress = $("#states-loading-progress");
            statesProgress.show();
            $.ajax({
                cache: false,
                type: "GET",
                url: '@(baseUrl)/Account/GetRegion/',
                data: { "cityId": selectedItem },
                success: function (data) {

                    ddlDistrict.html('');
                    $.each(data.district, function (id, option) {
                        ddlDistrict.append($('<option></option>').val(option.ID).html(option.Name));
                    });
                    statesProgress.hide();
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve states.');
                    statesProgress.hide();
                }
            });
        });


        $("#btn_Update").click(function () {

            if (!CheckPasswords()) {
                event.preventDefault();


                var oldPassword = $("#OldPassword").val();
                var paswordValue = $("#Password").val();
                var confirmPassword = $("#ConfirmPassword").val();

                if (paswordValue == "")
                    $("#passwordError").html('@Resources.Messages.PasswordValidationMsg');
                else if (confirmPassword == "")
                    $("#passwordError").html('@Resources.Messages.RePasswordValidationMsg');
                else
                    $("#passwordError").html('@Resources.Messages.PasswordErrorMsg');

            }

            else {
                $("#passwordError").html('');
                var phone = $("#Phone").val();
                var mobile = $("#Mobile").val();
                var email = $("#Email").val();
                var city = $("#City").val();
                var district = $("#District").val();
                var governorate = $("#Governorate").val();
                var userName = $("#UserName").val();
                var family = $("#Family").val();
                var password = $("#Password").val();
                var confirmPassword = $("#ConfirmPassword").val();
                var oldPassword = $("#OldPassword").val();
                var gender = $('input[name="Gender"]:checked').val();
                var IsPublicProfile = document.getElementById('IsPublicProfile').checked;
                var IsRegistered = document.getElementById('IsRegistered').checked;


                if (!$("#form").valid()) return false;


                $.ajax({
                    cache: false,
                    type: "Post",
                    url: '@(baseUrl)/EditProfile/UpdateTraderProfile/',
                    data: { 'Phone': phone, 'Mobile': mobile, 'Email': email, 'City': city, 'District': district, 'Governorate': governorate, 'Name': userName, 'IsPublicProfile': IsPublicProfile, 'IsRegistered': IsRegistered, 'Family': family, 'Password': password, 'Gender': gender, 'OldPassword': oldPassword, 'ConfirmPassword': confirmPassword },
                    success: function (data) {
                        debugger;
                        toastr.success('@Resources.Messages.Saved');
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        debugger;
                        if (xhr.status === 1)
                            toastr.error('@Resources.Messages.EmailExists');
                        else if (xhr.status === 2)
                            toastr.error('@Resources.Messages.OrderExists');
                        else if (xhr.status === 3)
                            toastr.error('@Resources.Messages.TraderNameExists');
                        else if (xhr.status === 4)
                            toastr.error('@Resources.Messages.TraderMobileExists');
                        else if (xhr.status === 5)
                            toastr.error('@Resources.Messages.TraderShopExists');
                        else if (xhr.status === 6)
                            toastr.error('@Resources.Messages.TraderPhoneExists');
                        else if (xhr.status === 7)
                            toastr.error('@Resources.Messages.InvalidOldPassword');
                        else if (xhr.status === 8)
                            toastr.error('@Resources.Messages.PasswordGeneralError');
                        else
                            toastr.error(thrownError);
                    }
                });
            }
        });


        function CheckPasswords() {
            var oldPassword = $("#OldPassword").val();
            var paswordValue = $("#Password").val();
            var confirmPassword = $("#ConfirmPassword").val();

            if (paswordValue == "" && confirmPassword == "" && oldPassword == "")
                return true;

            if (paswordValue != "" && confirmPassword != "" && oldPassword != "")
                return true;

            if (paswordValue == "" && confirmPassword == "" && oldPassword != "")
                return true;

            else
                return false;
        }
    });

</script>
@section SideMenu{
    @Html.Partial("_TraderSideMenu")
}
@section UpperBanner{


    <div class="innerBanner">
        <h1 class="banner_header">@Resources.General.ProfileInfo</h1>

        <div class="banner"><img src="../../Content/Images/inner_banner.jpg" width="1050" height="180" alt="" /></div>
    </div>
}

<script>
    $(function () {
        $("#div_editProfile").addClass("menuItemactive");
    });
</script>
