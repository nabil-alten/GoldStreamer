@using DAL.UnitOfWork
@using CaptchaMvc.HtmlHelpers
@using CaptchaMvc;


@model GoldStreamerWebApp.Models.TraderRegisterViewModel
@{
    string baseUrl = GoldStreamer.Helpers.CultureHelper.GetBaseURL().ToLower();
    ViewBag.Title = Resources.General.RegisterNewTrader;
}
@{
    Layout = "~/Views/Shared/_LayoutInner.cshtml";
}
@using (Html.BeginForm("TraderRegister", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @*<div class="form-horizontal">*@
    @Html.AntiForgeryToken()
    @*@Html.ValidationSummary()*@

    @Html.HiddenFor(model => model.TypeFlag, new { value = 2 })
    
      <h1><strong>تسجيل تاجر جديد</strong></h1>

    <div class="regMainInfo" style="border:none;" id="a" >
        <div style="color:red" id="error">@ViewBag.error</div>
        <table width="100%" border="0" cellspacing="15" dir="rtl" style="text-align:right;">

            <tr>
                <td>@Resources.General.FirstName <label style="color: red">*</label></td>
                <td>
                    @Html.TextBoxFor(model => model.Name, new { name = "name", type = "text", maxlength = 50, placeholder = @Resources.General.FirstName, autofocus = true })
                    <label style="color :red;"> @Html.ValidationMessageFor(model => model.Name)</label>

                </td>
                <td></td>
         
                <td>@Resources.General.LastName</td>
                <td>
                    @Html.TextBoxFor(model => model.Family, new { name = "name", type = "text", maxlength = 50, placeholder = @Resources.General.LastName })
                    <label style="color :red;"> @Html.ValidationMessageFor(model => model.Family)</label>
                </td>
                <td></td>
            </tr>


            <tr>
                <td>@Resources.General.Gender<label style="color: red">*</label></td>
                <td>
                    @Html.RadioButtonFor(model => model.Gender, "false")
                    @Html.Label(@Resources.General.Female)
                    @Html.RadioButtonFor(model => model.Gender, "true", new { @checked = true, id = "rbMale" })
                    @Html.Label(@Resources.General.Male)
                </td>
                <td></td>
          
                <td>@Resources.General.phone</td>
                <td>
                    @Html.TextBoxFor(model => model.Phone, new { maxlength = 11, placeholder = @Resources.General.phone })
                    <label style="color :red;">@Html.ValidationMessageFor(model => model.Phone) </label>
                </td>
                <td></td>
            </tr>

            <tr>
                <td>@Resources.General.Mobile</td>
                <td>
                    @Html.TextBoxFor(model => model.Mobile, new { name = "name", type = "text", maxlength = 15, placeholder = @Resources.General.Mobile })
                    <label style="color :red;">@Html.ValidationMessageFor(model => model.Mobile) </label>
                </td>
                <td></td>
          
                <td>@Resources.General.Email <label style="color: red">*</label></td>
                <td>
                    @Html.TextBoxFor(model => model.Email, new { name = "name", type = "text", placeholder = @Resources.General.Email })
                    <label style="color :red;">@Html.ValidationMessageFor(model => model.Email) </label>
                </td>
                <td></td>
            </tr>

            <tr>
                <td>@Resources.General.ReEmail <label style="color: red">*</label></td>
                <td>
                    @Html.TextBoxFor(model => model.ReEmail, new { name = "name", type = "text", placeholder = @Resources.General.ReEmail })
                    <label style="color :red;">@Html.ValidationMessageFor(model => model.ReEmail) </label>
                </td>
                <td></td>
         
                <td>@Resources.General.Governorate</td>
                <td>
                    @Html.DropDownList("Governorate", new SelectList(Model.Governorates, "ID", "Name"), @Resources.General.select)
                    <label style="color :red;"> @Html.ValidationMessageFor(model => model.Governorate)</label>
                </td>
                <td></td>
            </tr>

            <tr>
                <td>@Resources.General.City</td>
                <td>
                    @Html.DropDownList("City", Enumerable.Empty<SelectListItem>(), @Resources.General.select)
                </td>
                <td></td>
          
                <td>@Resources.General.Region</td>
                <td>
                    @Html.DropDownList("District", Enumerable.Empty<SelectListItem>(), @Resources.General.select)
                </td>
                <td></td>
            </tr>

            <tr>
                <td>@Resources.General.UserName <label style="color: red">*</label></td>
                <td>
                    @Html.TextBoxFor(m => m.UserName, new { name = "name", type = "text", @class = "form-control", placeholder = @Resources.General.UserName, maxlength = 20 })
                    <label style="color :red;"> @Html.ValidationMessageFor(model => model.UserName)</label>
                </td>
                <td></td>
           
                <td>@Resources.General.Password <label style="color: red">*</label></td>
                <td>
                    @Html.PasswordFor(m => m.Password, new { name = "name", type = "password", @class = "form-control", placeholder = @Resources.General.Password, maxlength = 20 })
                    <label style="color :red;">@Html.ValidationMessageFor(model => model.Password) </label>
                </td>
                <td></td>
            </tr>

            <tr>
                <td>@Resources.General.ConfirmPassword <label style="color: red">*</label></td>
                <td>
                    @Html.PasswordFor(m => m.ConfirmPassword, new { name = "name", type = "password", @class = "form-control", placeholder = @Resources.General.ConfirmPassword, maxlength = 20 })
                    <label style="color :red;"> @Html.ValidationMessageFor(model => model.ConfirmPassword)</label>
                </td>
                <td></td>
            </tr>

            <tr>
                <td>@Resources.General.Captcha <label style="color: red">*</label></td>
                <td>
                    @Html.Captcha(Resources.General.RefreshCaptcha, Resources.General.EnterCaptcha, 6, Resources.General.EnterCaptcha, false)
                    <div style="color: red">@ViewBag.Capatcha</div>
                </td>
                <td></td>
            </tr>

            <tr>
                <td colspan="3" style="text-align: center;">
                    <input class="btn" name="" type="submit" value="@Resources.General.Register" />
                </td>
            </tr>

        </table>

    </div>






}

<script>

    $(function () {
        $("#Governorate").change(function () {
            var selectedItem = $(this).val();
            debugger;
            var ddlCity = $("#City");
            //var statesProgress = $("#states-loading-progress");
            //statesProgress.show();
            ddlCity.html('');
            $("#District").html('');
            if (selectedItem == "")
                return false;
            $.ajax({
                cache: false,
                type: "GET",
                url: '@(baseUrl)/Account/GetCity/',
                data: { "govId": selectedItem },
                success: function (data) {
                    debugger;

                    $.each(data.city, function (id, option) {
                        debugger;
                        ddlCity.append($('<option></option>').val(option.ID).html(option.Name));
                    });

                },
                error: function (xhr, ajaxOptions, thrownError) {
                    debugger;
                    alert('Failed to retrieve states.');
                    //statesProgress.hide();
                }
            });
        });

        $("#City").change(function () {
            var selectedItem = $(this).val();
            var ddlDistrict = $("#District");
            var statesProgress = $("#states-loading-progress");
            statesProgress.show();
            $.ajax({
                cache: false,
                type: "GET",
                url: '@(baseUrl)/Account/GetRegion/',
                data: { "cityId": selectedItem },
                success: function (data) {

                    ddlDistrict.html('');
                    $.each(data.district, function (id, option) {
                        ddlDistrict.append($('<option></option>').val(option.ID).html(option.Name));
                    });
                    statesProgress.hide();
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve states.');
                    statesProgress.hide();
                }
            });
        });
    });

</script>